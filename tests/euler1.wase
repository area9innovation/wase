include lib/runtime;

/*
If we list all the natural numbers below 10 that are multiples of 3 or 5, 
we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.
*/
export memory 32;

// Implementation using a loop
euler1Loop(limit : i32) -> i32 {
	var start = 1;
	var acc = 0;
	loop {
		break_if<1>(acc, start >= limit);
		if (start % 3 == 0 | start % 5 == 0) {
			acc := acc + start;
		};
		start := start + 1;
		// This is really continue inside the loop
		break<>();
	};
	// This is never reached, but we have to get this to return i32
	acc;
}

// Recursive requires a lot of stack, since there are no tail calls in Wasm yet
foldRange(start : i32, end : i32, acc : i32) -> i32 {
	if (start <= end) {
		foldRange(start + 1, end, if (start % 3 == 0 | start % 5 == 0) {
			acc + start;
		} else acc)
	} else {
		acc;
	}
}

euler1Rec(limit : i32) -> i32 {
    foldRange(1, limit - 1, 0);
}

export _start() -> () {
	printi32(euler1Loop(1000)); // Correct: 233168
	printByte(10);
	printi32(euler1Rec(1000)); // Correct: 233168
	printByte(10);
    {}
}
