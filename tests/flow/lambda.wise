include lib/wise/runtime;
include tools/flowc/backends/wise/lib/tuple;
include tools/flowc/backends/wise/lib/array;
include tools/flowc/backends/wise/lib/string;

 deci(v : i32, __closure__ : i32) -> i32 {
	
	(v - 1)
}

 inci(v : i32, __closure__ : i32) -> i32 {
	
	(v + 1)
}

 myFn(val : i32, addFn : i32, subFn : i32, __closure__ : i32) -> () {
	
	{
	printlni32(getStructValue[(i32, i32, (i32, i32) -> i32, i32)](addFn).2((val + 1), getStructValue[(i32, i32, (i32, i32) -> i32, i32)](addFn).3));
	printlni32(getStructValue[(i32, i32, (i32, i32) -> i32, i32)](subFn).2((val + 2), getStructValue[(i32, i32, (i32, i32) -> i32, i32)](subFn).3));
	}
}

 myFn2(vfn : i32, __closure__ : i32) -> () {
	
	printlni32(getStructValue[(i32, i32, (i32, i32) -> i32, i32)](vfn).2(31, getStructValue[(i32, i32, (i32, i32) -> i32, i32)](vfn).3))
}

 printi(v : i32, __closure__ : i32) -> () {
	
	printlni32(v)
}

 myFn1(vfn1 : i32, __closure__ : i32) -> () {
	
	getStructValue[(i32, i32, (i32, i32) -> (), i32)](vfn1).2(createStruct[((i32, i32) -> i32, i32)](17, (inci, 0,)), getStructValue[(i32, i32, (i32, i32) -> (), i32)](vfn1).3)
}

 export _start() -> () {
	initMemory();
	step : i32 = {100};
	rate : i32 = {3};
	delta : i32 = {5};
	localFn : i32 = {createStruct[((i32, i32) -> (), i32)](1, (lambda__lambda__516__0, createStruct[(i32, i32)](2, (rate, step,)),))};
	{
	getStructValue[(i32, i32, (i32, i32) -> (), i32)](localFn).2(10, getStructValue[(i32, i32, (i32, i32) -> (), i32)](localFn).3);
	localFn2 : i32 = {createStruct[((i32, i32) -> i32, i32)](4, (lambda__lambda__655__1, createStruct[(i32, i32, i32)](5, (delta, rate, step,)),))};
	r1 : i32 = {getStructValue[(i32, i32, (i32, i32) -> i32, i32)](localFn2).2(10, getStructValue[(i32, i32, (i32, i32) -> i32, i32)](localFn2).3)};
	{
	printlni32(r1);
	aliasFn : i32 = {createStruct[((i32, i32) -> i32, i32)](7, (inci, 0,))};
	{
	printlni32(getStructValue[(i32, i32, (i32, i32) -> i32, i32)](aliasFn).2(2, getStructValue[(i32, i32, (i32, i32) -> i32, i32)](aliasFn).3));
	aliasLambda : i32 = {localFn2};
	{
	myFn(20, createStruct[((i32, i32) -> i32, i32)](28, (lambda__lambda__817__2, createStruct[(i32, i32)](29, (rate, step,)),)), createStruct[((i32, i32) -> i32, i32)](26, (lambda__lambda__842__3, createStruct[(i32, i32)](27, (rate, step,)),)), 0);
	myFn(21, aliasFn, createStruct[((i32, i32) -> i32, i32)](9, (deci, 0,)), 0);
	myFn(21, localFn2, aliasLambda, 0);
	myFn1(createStruct[(((i32) -> i32, i32) -> (), i32)](24, (lambda__lambda__970__4, createStruct[()](25, ()),)), 0);
	myFn1(createStruct[(((i32) -> i32, i32) -> (), i32)](36, (lambda__lambda__1030__5, createStruct[()](37, ()),)), 0);
	myFn1(createStruct[((i32, i32) -> (), i32)](10, (myFn2, 0,)), 0);
	localFn3 : i32 = {createStruct[((i32, i32) -> (), i32)](11, (lambda__lambda__1216__6, 0,))};
	{
	myFn1(localFn3, 0);
	();
	};
	};
	};
	};
	}
}

 lambda__lambda__1030__5(incfn : i32, __closure__ : i32) -> () {
	
	printi(tmp0 : i32 = {incfn};
	getStructValue[(i32, i32, (i32, i32) -> i32, i32)](tmp0).2(30, getStructValue[(i32, i32, (i32, i32) -> i32, i32)](tmp0).3), __closure__)
}

 lambda__lambda__1216__6(localFn32 : i32, __closure__ : i32) -> () {
	
	printlni32(tmp1 : i32 = {localFn32};
	getStructValue[(i32, i32, (i32, i32) -> i32, i32)](tmp1).2(79, getStructValue[(i32, i32, (i32, i32) -> i32, i32)](tmp1).3))
}

 lambda__lambda__516__0(v1 : i32, __closure__ : i32) -> () {
	
	printlni32((v1 + (getStructValue[(i32, i32, i32, i32)](__closure__).3 * getStructValue[(i32, i32, i32, i32)](__closure__).2)))
}

 lambda__lambda__655__1(v1 : i32, __closure__ : i32) -> i32 {
	
	((v1 + (getStructValue[(i32, i32, i32, i32, i32)](__closure__).4 * getStructValue[(i32, i32, i32, i32, i32)](__closure__).3)) + getStructValue[(i32, i32, i32, i32, i32)](__closure__).2)
}

 lambda__lambda__817__2(v2 : i32, __closure__ : i32) -> i32 {
	
	(v2 + (getStructValue[(i32, i32, i32, i32)](__closure__).3 * getStructValue[(i32, i32, i32, i32)](__closure__).2))
}

 lambda__lambda__842__3(v2 : i32, __closure__ : i32) -> i32 {
	
	(v2 - (getStructValue[(i32, i32, i32, i32)](__closure__).3 * getStructValue[(i32, i32, i32, i32)](__closure__).2))
}

 lambda__lambda__970__4(incfn : i32, __closure__ : i32) -> () {
	
	printlni32(tmp2 : i32 = {incfn};
	getStructValue[(i32, i32, (i32, i32) -> i32, i32)](tmp2).2(30, getStructValue[(i32, i32, (i32, i32) -> i32, i32)](tmp2).3))
}
