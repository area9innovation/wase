native println : io (flow) -> void = Native.println;

Struct1(v1 : double, v2 : ref double);
Struct2(v : double);
extractor(v : Struct1) -> ref double {
	v.v2
}

getRefAlias(v : ref double) -> ref double {
	v
}

mapper(v : Struct1, extr : (Struct1) -> Struct1) -> Struct1 {
	extr(v)
}

makeStruct1(init1 : double, init2 : double) -> Struct1 {
	Struct1(init1, ref init2)
}

updateStruct(s : Struct1, newVal : double) -> Struct1 {
	s.v2 := newVal;
	s;
}

getRefValue(v : ref double) -> double {
	^v;
}


// TODO: 
// 1) compare refs. (run flowcpp to know how it works)
main() {

	a1 = ref 10.1;
	println(^a1); // 10.1
	a1 := 10.5;
	// println(a1); // error
	println(^a1); // 10.5

	s1 = Struct1(10.7, ref 11.4);
	s1.v2 := 12.1;
	println(^(s1.v2)); // 12.1
	r1 : ref double = extractor(s1);
	println(^r1); // 12.1
	r1 := 13.2;
	println(^(s1.v2)); // 13

	r3 = ref 50.6;
	r4 = getRefAlias(r3);
	r4 := 15.3;
	println(^r3); // 15.3
	println(^r4); // 15.3

	r3 := 16.67;
	println(^r3); // 16.67

	println(^r1); // 13.2
	r2 = mapper(s1, \a -> a);
	println(^(r2.v2)); // 13.2
	r2.v2 := 14.1;
	println(^(s1.v2)); // 14.1
	println(^(r2.v2)); // 14.1


	s2 = makeStruct1(10.6, 20.1);
	println(^(s2.v2)); // 20.1
	updateStruct(s2, 100.9);
	println(^(s2.v2)); // 100.9
	println(getRefValue(s2.v2)); // 100.9

	lambdaR = \-> ref 489.198;
	println(^(lambdaR()));
	s5 = \-> println(^r3); // 16.67
	s5();

	s4 = ref \-> 5.3;
	s4 := \-> 2.3;
	println((^s4)());

	arrR = ref [];
	arrR := [1.1, 2.2, 3.3];
	println((^arrR)[2]);

	s3 = ref Struct2(33.1);
	s3 := Struct2(34.2);
	println((^s3).v); // 34.2

	arrRs = [ref 1.1, ref 54.7];
	arrRs[1] := 29.3;
	println(^(arrRs[0]));
	println(^(arrRs[1]));

	v1 = ref 2;
	v2 = ref 27;
	v3 = ref 2;
	println(v1 == v2); // false
	println(v1 == v3); // false
	println(^v1 == ^v2); // false
	println(^v1 == ^v3); // true
}
