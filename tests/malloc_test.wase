include lib/malloc;
include lib/runtime;

export memory 128;

malloc_test() -> i32 {
	x0 = malloc_alloc(15);
	// printHex32(x0); printByte(10);
	malloc_free(x0);

	x1 = malloc_alloc(15);
	// printHex32(x1); printByte(10);
	malloc_free(x1);

	x2 = malloc_alloc(4);
	// printHex32(x2); printByte(10);

	x3 = malloc_alloc(256);
	// printHex32(x3); printByte(10);

	alloc_correct = x0 == x1 & x2 == x1;
	malloc_free(x3);

	x4 = malloc_alloc(1048576);
	// printHex32(x4); printByte(10);

	x0 == x1 & x1 == x2 & x3 == x4;
}

export _start() -> () {
	malloc_init_allocator(32);
	printi32(malloc_test());
}
