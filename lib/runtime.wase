include lib/wasi;

// Prints a byte to stdout
printByte(i : i32) -> () {
	// What offset to write from
	store<>(0, 12);
	// How many bytes to write
	store<>(4, 1);
	// The byte to write
	store<>(12, i);

	// Print it to stdout
	fd_write(1, 0, 1, 8);
	{}
}

// Print unsigned i32 as decimal
printu32(i : i32) -> () {
	if (lt_u<>(i, 10)) {
		printByte(48 + i)
	} else {
		printu32(div_u<>(i, 10));
		printu32(rem_u<>(i, 10));
	}
}

// Print signed i32 as decimal
printi32(i : i32) -> () {
	if (i < 0) {
		printByte(45);
		printu32(0 - i);
	} else {
		printu32(i)
	}
}

printHex32(i : i32) -> () {
	if (i < 10) {
		printByte(48 + i)
	} else if (i < 16) {
		printByte(55 + i)
	} else {
		printHex32(div_u<>(i, 16));
		printHex32(i & 0xf);
	}
}
